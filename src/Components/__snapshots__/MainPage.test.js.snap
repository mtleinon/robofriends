// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainPage is rendered 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainPage
    isPending={false}
    onRequestRobots={[Function]}
    robots={
      Array [
        Object {
          "email": "john@gmail.com",
          "id": 1,
          "name": "John",
        },
        Object {
          "email": "jane@gmail.com",
          "id": 2,
          "name": "Jane",
        },
        Object {
          "email": "lisa@gmail.com",
          "id": 3,
          "name": "Lisa",
        },
      ]
    }
    searchField="john"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <SearchBox />,
        <Scroll>
          <ErrorBoundary>
            <CardList
              robots={
                Array [
                  Object {
                    "email": "john@gmail.com",
                    "id": 1,
                    "name": "John",
                  },
                ]
              }
            />
          </ErrorBoundary>
        </Scroll>,
      ],
      "className": "tc",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "searchChange": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ErrorBoundary>
            <CardList
              robots={
                Array [
                  Object {
                    "email": "john@gmail.com",
                    "id": 1,
                    "name": "John",
                  },
                ]
              }
            />
          </ErrorBoundary>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CardList
              robots={
                Array [
                  Object {
                    "email": "john@gmail.com",
                    "id": 1,
                    "name": "John",
                  },
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "robots": Array [
                Object {
                  "email": "john@gmail.com",
                  "id": 1,
                  "name": "John",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <SearchBox />,
          <Scroll>
            <ErrorBoundary>
              <CardList
                robots={
                  Array [
                    Object {
                      "email": "john@gmail.com",
                      "id": 1,
                      "name": "John",
                    },
                  ]
                }
              />
            </ErrorBoundary>
          </Scroll>,
        ],
        "className": "tc",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "searchChange": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ErrorBoundary>
              <CardList
                robots={
                  Array [
                    Object {
                      "email": "john@gmail.com",
                      "id": 1,
                      "name": "John",
                    },
                  ]
                }
              />
            </ErrorBoundary>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <CardList
                robots={
                  Array [
                    Object {
                      "email": "john@gmail.com",
                      "id": 1,
                      "name": "John",
                    },
                  ]
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "robots": Array [
                  Object {
                    "email": "john@gmail.com",
                    "id": 1,
                    "name": "John",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`MainPage is rendered when isPending is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainPage
    isPending={true}
    onRequestRobots={[Function]}
    robots={
      Array [
        Object {
          "email": "john@gmail.com",
          "id": 1,
          "name": "John",
        },
        Object {
          "email": "jane@gmail.com",
          "id": 2,
          "name": "Jane",
        },
        Object {
          "email": "lisa@gmail.com",
          "id": 3,
          "name": "Lisa",
        },
      ]
    }
    searchField="john"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <h2>
          Loading robots ...
        </h2>,
      ],
      "className": "tc",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Loading robots ...",
        },
        "ref": null,
        "rendered": "Loading robots ...",
        "type": "h2",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <h2>
            Loading robots ...
          </h2>,
        ],
        "className": "tc",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Loading robots ...",
          },
          "ref": null,
          "rendered": "Loading robots ...",
          "type": "h2",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
